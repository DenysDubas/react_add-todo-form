{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","usersFromServer","find","todosWithUsers","userId","getMaxId","Math","max","App","useState","setTodos","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","onSubmit","event","preventDefault","newTodo","prevTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63d9cec8.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todos';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"list-of-todo\">\n    {todos.map((todo) => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport './service/reset.scss';\nimport './service/normalize.scss';\nimport React, { useState } from 'react';\n\nimport { Todo } from './types/Todos';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(id: number) {\n  return usersFromServer.find((user) => user.id === id) || null;\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map((todo) => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nfunction getMaxId(todos: Todo[]): number {\n  return Math.max(...todos.map((todo) => todo.id)) + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+(event.target.value));\n    setHasUserError(false);\n  };\n\n  const clearAll = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserError(false);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!userId || !title) {\n      setHasUserError(!userId);\n      setHasTitleError(!title);\n\n      return;\n    }\n\n    const newTodo = {\n      id: getMaxId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n    clearAll();\n  };\n\n  return (\n    <div className=\"App\">\n      <form\n        className=\"decor\"\n        action=\"/api/users\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"form-left-decoration\" />\n        <div className=\"form-right-decoration\" />\n        <div className=\"circle\" />\n        <div className=\"form-inner\">\n          <h1>Add todo form</h1>\n\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n          <select\n            id=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            className=\"button\"\n          >\n            Add\n          </button>\n        </div>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}